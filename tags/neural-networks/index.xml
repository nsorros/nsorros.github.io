<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>neural networks on Nick Sorros</title><link>https://nsorros.github.io/tags/neural-networks/</link><description>Recent content in neural networks on Nick Sorros</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 13 Dec 2021 10:10:30 +0300</lastBuildDate><atom:link href="https://nsorros.github.io/tags/neural-networks/index.xml" rel="self" type="application/rss+xml"/><item><title>Tagging biomedical grants with 29K tags</title><link>https://nsorros.github.io/posts/tagging-biomedical-grants/</link><pubDate>Mon, 13 Dec 2021 10:10:30 +0300</pubDate><guid>https://nsorros.github.io/posts/tagging-biomedical-grants/</guid><description>In a previous post we spoke about a neural architecture we developed for classifying our grants with ~5K disease tags from the MeSH (Medical subject Headings) hierarchy. In this post we will touch on the techniques needed to scale to a model to classify all ~29K MeSH tags. Our dataset consists of 14M biomedical publications labelled with one or more MeSH tags (on average 12 tags per publications), so the challenge is both the thousands of outputs our model needs to recognise and the millions of examples it needs to learn from.</description></item><item><title>A neural network tagging biomedical grants</title><link>https://nsorros.github.io/posts/neural-network-tagging-biomedical-grants/</link><pubDate>Tue, 24 Nov 2020 10:10:30 +0300</pubDate><guid>https://nsorros.github.io/posts/neural-network-tagging-biomedical-grants/</guid><description>Neural networks have been a ubiquitous part of the resurgence of Artificial Intelligence over the last few years. Unsurprisingly then, we decided to use a neural network as the modelling approach for tagging our grants with MeSH. Neural networks have raised the state of the art performance on the task to 71% from below 60%. Understandably neural networks may feel complicated to someone outside the field of machine learning, but in this piece my goal is to make them as understandable as logistic regression and Principal Component Analysis (PCA).</description></item></channel></rss>